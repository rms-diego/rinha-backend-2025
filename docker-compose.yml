services:
  nginx:
    image: nginx:alpine
    ports:
      - "9999:9999"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - server1
      - server2
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "30MB"

  database:
    image: postgres:latest
    environment:
      POSTGRES_DB: rinha_backend_2025
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 3s
      timeout: 5s
      retries: 5
    volumes:
      - ./infra/init.sql:/docker-entrypoint-initdb.d/init.sql
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "120MB"

  server1:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=database
      - PORT=${PORT}
    env_file:
      - .env
    ports:
      - "8080:${PORT}"
    depends_on:
      database:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "100MB"

  server2:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=database
      - PORT=${PORT}
    env_file:
      - .env
    ports:
      - "8081:${PORT}"
    depends_on:
      database:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "100MB"
